// Update the VARIANT arg in docker-compose.yml to pick a Python version
{
	"name": "Neural Style Transfer",

	//Dedicated to Docker-compose
	//----------------------
	"dockerComposeFile": [
		"docker-compose-dev-container.yml",
		// "docker-compose-tensorboard.yml"
	],
	// set the service to connect to, out of all the "composed" services
	// this will be the environment (in the dev-container) that the developer will be operain
	// for example the developer will be able to spawn one or more shells, in the environment
	"service": "my_dev_container",
	//----------------------
	"mounts": [
		"source=/var/run/docker.sock,target=/var/run/docker-host.sock,type=bind"
		// "source=${env:HOME}${env:USERPROFILE}/.kube,target=/usr/local/share/kube-localhost,type=bind"
		// Uncomment the next line to also sync certs in your .minikube folder
		// "source=${env:HOME}${env:USERPROFILE}/.minikube,target=/usr/local/share/minikube-localhost,type=bind"
	],
	"workspaceFolder": "/workspaces/${localWorkspaceFolderBasename}",
	// "remoteUser": "vscode",

	// postCreateCommand -> postStartCommand

	// Use 'postCreateCommand' to run commands after the container is created.
	// "postCreateCommand": "pip install --user -r requirements.txt",
	
	//"postStartCommand": "git config --global --add safe.directory ${containerWorkspaceFolder} && poetry install -E test",
	// to enable git commands
	"postStartCommand": {

		// Enable Git Commands //
		// git is expected to be > 2.35.3, which means we add a global one-time config
		// for the safe.directory, which is a pattern that matches any directory/file
		"git_mark_all_repos_safe": "git config --global --add safe.directory '*'",
		// instead if git version < 2.35.3, use: "git_add_safe": "git config --global --add safe.directory ${containerWorkspaceFolder}",

		// Install Python Dependencies, in a Deterministic Way //
		// we require to find the /tmp/pip-tmp/requirements-test.txt
		// file with python pinned dependencies
		// the my_dev_container service/container/environment must provide it
		"pip_install": "pip --disable-pip-version-check --no-cache-dir install -r /tmp/pip-tmp/requirements.txt && rm -rf /tmp/pip-tmp"

	},
	// Features to add to the dev container. More info: https://containers.dev/implementors/features.
	// "features": {},

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// This can be used to network with other containers or the host.
	"forwardPorts": [8000],
	// server x is on 8000

	// Configure tool-specific properties.
	// "customizations": {},

	// Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.
	// "remoteUser": "root"

	// Configure tool-specific properties.
	"customizations": {
		// Configure properties specific to VS Code.
		"vscode": {
			// Add the IDs of extensions you want installed when the container is created.
			"extensions": [
				"ms-azuretools.vscode-docker",
				"ms-python.python",
				"ms-python.vscode-pylance"
				// "ms-kubernetes-tools.vscode-kubernetes-tools",
				// "patbenatar.advanced-new-file",
				// "aaron-bond.better-comments",
				// "ms-python.autopep8",
				// "mtxr.sqltools",
				// "mtxr.sqltools-driver-pg"
			]
		}
	}
}
